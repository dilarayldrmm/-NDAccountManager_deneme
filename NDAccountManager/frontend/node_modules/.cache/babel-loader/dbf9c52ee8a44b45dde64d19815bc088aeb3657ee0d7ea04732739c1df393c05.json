{"ast":null,"code":"var _jsxFileName = \"/Users/dilarayildirim/Desktop/deneme/NDAccountManager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [role, setRole] = useState(\"Unknown\");\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0]\n        });\n        const accessToken = response.accessToken;\n        const graphResponse = await axios.get(\"https://graph.microsoft.com/v1.0/me/memberOf\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const groups = graphResponse.data.value.map(group => group.id);\n\n        // Grup ID'lerine göre rol belirleme\n        if (groups.includes(process.env.REACT_APP_GROUP_MANAGER_ID)) {\n          setRole(\"Manager\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_DEVELOPMENT_ID)) {\n          setRole(\"Development\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_SUPPORT_ID)) {\n          setRole(\"Support\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_SALES_ID)) {\n          setRole(\"Sales\");\n        } else {\n          setRole(\"User\");\n        }\n      } catch (error) {\n        console.error(\"Grup bilgileri alınamadı:\", error);\n      }\n    };\n    fetchGroups();\n  }, [instance, accounts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ho\\u015F geldin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rol\\xFCn: \", role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"GTdA6Hpsok1uYYdbqTRXbiPmEB0=\", false, function () {\n  return [useMsal];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useMsal","loginRequest","axios","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","instance","accounts","role","setRole","fetchGroups","response","acquireTokenSilent","account","accessToken","graphResponse","get","headers","Authorization","groups","data","value","map","group","id","includes","process","env","REACT_APP_GROUP_MANAGER_ID","REACT_APP_GROUP_DEVELOPMENT_ID","REACT_APP_GROUP_SUPPORT_ID","REACT_APP_GROUP_SALES_ID","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dilarayildirim/Desktop/deneme/NDAccountManager/frontend/src/App.js"],"sourcesContent":["import { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Home() {\n  const { instance, accounts } = useMsal();\n  const [role, setRole] = useState(\"Unknown\");\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0],\n        });\n\n        const accessToken = response.accessToken;\n\n        const graphResponse = await axios.get(\n          \"https://graph.microsoft.com/v1.0/me/memberOf\",\n          {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          }\n        );\n\n        const groups = graphResponse.data.value.map((group) => group.id);\n\n        // Grup ID'lerine göre rol belirleme\n        if (groups.includes(process.env.REACT_APP_GROUP_MANAGER_ID)) {\n          setRole(\"Manager\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_DEVELOPMENT_ID)) {\n          setRole(\"Development\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_SUPPORT_ID)) {\n          setRole(\"Support\");\n        } else if (groups.includes(process.env.REACT_APP_GROUP_SALES_ID)) {\n          setRole(\"Sales\");\n        } else {\n          setRole(\"User\");\n        }\n      } catch (error) {\n        console.error(\"Grup bilgileri alınamadı:\", error);\n      }\n    };\n\n    fetchGroups();\n  }, [instance, accounts]);\n\n  return (\n    <div>\n      <h1>Hoş geldin</h1>\n      <p>Rolün: {role}</p>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGV,OAAO,CAAC,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,kBAAkB,CAAC;UACjD,GAAGd,YAAY;UACfe,OAAO,EAAEN,QAAQ,CAAC,CAAC;QACrB,CAAC,CAAC;QAEF,MAAMO,WAAW,GAAGH,QAAQ,CAACG,WAAW;QAExC,MAAMC,aAAa,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CACnC,8CAA8C,EAC9C;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,WAAW;UACtC;QACF,CACF,CAAC;QAED,MAAMK,MAAM,GAAGJ,aAAa,CAACK,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,CAAC;;QAEhE;QACA,IAAIL,MAAM,CAACM,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,0BAA0B,CAAC,EAAE;UAC3DnB,OAAO,CAAC,SAAS,CAAC;QACpB,CAAC,MAAM,IAAIU,MAAM,CAACM,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACE,8BAA8B,CAAC,EAAE;UACtEpB,OAAO,CAAC,aAAa,CAAC;QACxB,CAAC,MAAM,IAAIU,MAAM,CAACM,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACG,0BAA0B,CAAC,EAAE;UAClErB,OAAO,CAAC,SAAS,CAAC;QACpB,CAAC,MAAM,IAAIU,MAAM,CAACM,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACI,wBAAwB,CAAC,EAAE;UAChEtB,OAAO,CAAC,OAAO,CAAC;QAClB,CAAC,MAAM;UACLA,OAAO,CAAC,MAAM,CAAC;QACjB;MACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDtB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBACEJ,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnC,OAAA;MAAA+B,QAAA,GAAG,YAAO,EAAC1B,IAAI;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACjC,EAAA,CAnDQD,IAAI;EAAA,QACoBP,OAAO;AAAA;AAAA0C,EAAA,GAD/BnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
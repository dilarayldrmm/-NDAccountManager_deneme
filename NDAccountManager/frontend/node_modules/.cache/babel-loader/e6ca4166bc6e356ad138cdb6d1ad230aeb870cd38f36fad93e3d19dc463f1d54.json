{"ast":null,"code":"// utils/authUtils.js\nimport { getUserRole } from \"./roleUtils\"; // grup ID’lerine göre rol belirleme\n\nexport function getUserRoleFromAccount(account) {\n  var _claims$_claim_names;\n  if (!account || !account.idTokenClaims) {\n    console.warn(\"Hesap veya token bilgisi bulunamadı.\");\n    return \"Unknown\";\n  }\n  const claims = account.idTokenClaims;\n\n  // Grup bilgisi doğrudan token içinde varsa\n  if (claims.groups && Array.isArray(claims.groups)) {\n    return getUserRole(claims.groups);\n  }\n\n  // Grup bilgisi çok fazla olduğunda claim yerine claim_names döner\n  if ((_claims$_claim_names = claims._claim_names) !== null && _claims$_claim_names !== void 0 && _claims$_claim_names.groups) {\n    console.warn(\"Çok fazla grup olduğu için gruplar token içinde gelmedi. Microsoft Graph API ile alınmalı.\");\n    return \"Unknown\";\n  }\n  console.warn(\"Grup bilgisi bulunamadı.\");\n  return \"Unknown\";\n}","map":{"version":3,"names":["getUserRole","getUserRoleFromAccount","account","_claims$_claim_names","idTokenClaims","console","warn","claims","groups","Array","isArray","_claim_names"],"sources":["/Users/dilarayildirim/Desktop/deneme/NDAccountManager/frontend/src/utils/authUtils.js"],"sourcesContent":["// utils/authUtils.js\nimport { getUserRole } from \"./roleUtils\"; // grup ID’lerine göre rol belirleme\n\nexport function getUserRoleFromAccount(account) {\n  if (!account || !account.idTokenClaims) {\n    console.warn(\"Hesap veya token bilgisi bulunamadı.\");\n    return \"Unknown\";\n  }\n\n  const claims = account.idTokenClaims;\n\n  // Grup bilgisi doğrudan token içinde varsa\n  if (claims.groups && Array.isArray(claims.groups)) {\n    return getUserRole(claims.groups);\n  }\n\n  // Grup bilgisi çok fazla olduğunda claim yerine claim_names döner\n  if (claims._claim_names?.groups) {\n    console.warn(\n      \"Çok fazla grup olduğu için gruplar token içinde gelmedi. Microsoft Graph API ile alınmalı.\"\n    );\n    return \"Unknown\";\n  }\n\n  console.warn(\"Grup bilgisi bulunamadı.\");\n  return \"Unknown\";\n}"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,aAAa,CAAC,CAAC;;AAE3C,OAAO,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EAAA,IAAAC,oBAAA;EAC9C,IAAI,CAACD,OAAO,IAAI,CAACA,OAAO,CAACE,aAAa,EAAE;IACtCC,OAAO,CAACC,IAAI,CAAC,sCAAsC,CAAC;IACpD,OAAO,SAAS;EAClB;EAEA,MAAMC,MAAM,GAAGL,OAAO,CAACE,aAAa;;EAEpC;EACA,IAAIG,MAAM,CAACC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACC,MAAM,CAAC,EAAE;IACjD,OAAOR,WAAW,CAACO,MAAM,CAACC,MAAM,CAAC;EACnC;;EAEA;EACA,KAAAL,oBAAA,GAAII,MAAM,CAACI,YAAY,cAAAR,oBAAA,eAAnBA,oBAAA,CAAqBK,MAAM,EAAE;IAC/BH,OAAO,CAACC,IAAI,CACV,4FACF,CAAC;IACD,OAAO,SAAS;EAClB;EAEAD,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;EACxC,OAAO,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}